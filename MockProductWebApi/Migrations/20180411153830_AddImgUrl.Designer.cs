// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using MockProductWebApi.Models;
using System;

namespace MockProductWebApi.Migrations
{
    [DbContext(typeof(MockProductContext))]
    [Migration("20180411153830_AddImgUrl")]
    partial class AddImgUrl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("MockProductWebApi.Models.MockProduct", b =>
                {
                    b.Property<int>("MockProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImgUrl");

                    b.Property<string>("Name");

                    b.Property<float>("Price");

                    b.HasKey("MockProductId");

                    b.ToTable("MockProducts");
                });

            modelBuilder.Entity("MockProductWebApi.Models.MockProductReview", b =>
                {
                    b.Property<int>("MockProductReviewId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MockProductId");

                    b.Property<float>("MockProductRating");

                    b.Property<string>("MockProductReviewContent");

                    b.HasKey("MockProductReviewId");

                    b.HasIndex("MockProductId");

                    b.ToTable("MockProductReviews");
                });

            modelBuilder.Entity("MockProductWebApi.Models.MockProductReview", b =>
                {
                    b.HasOne("MockProductWebApi.Models.MockProduct")
                        .WithMany("Reviews")
                        .HasForeignKey("MockProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
